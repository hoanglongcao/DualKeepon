# -*- coding: iso-8859-1 -*-

from openpyxl import load_workbook
from Tkinter import *

import time
import serial
import threading

import data as d

######################## INITIALIZATION ######################
if d.robots_definition == "2 Keepon":
    import keepon as k
    sheet_keepon = d.excel_file['Keepon']
    keepon_right = serial.Serial(sheet_keepon['C2'].value,9600)
    time.sleep(0.5)
    keepon_left = serial.Serial(sheet_keepon['B2'].value,9600)
    time.sleep(0.5)
elif d.robots_definition == "2 Nao":
    import nao as n
    sheet_nao = d.excel_file['Nao']
    robot_IP_right = str(sheet_nao['C3'].value)
    port_right = sheet_nao['C2'].value
    robot_IP_left = str(sheet_nao['B3'].value)
    port_left = sheet_nao['B2'].value
elif d.robots_definition == "Left Keepon & Right Nao":
    import keepon as k
    import nao as n
    sheet_keepon = d.excel_file['Keepon']
    sheet_nao = d.excel_file['Nao']
    keepon_left = serial.Serial(sheet_keepon['B2'].value,9600)
    time.sleep(0.5)
    robot_IP_right = str(sheet_nao['C3'].value)
    port_right = sheet_nao['C2'].value
elif d.robots_definition == "Left Nao & Right Keepon":
    import keepon as k
    import nao as n
    sheet_keepon = d.excel_file['Keepon']
    sheet_nao = d.excel_file['Nao']
    keepon_right = serial.Serial(sheet_keepon['C2'].value,9600)
    time.sleep(0.5)
    robot_IP_left = str(sheet_nao['B3'].value)
    port_left = sheet_nao['B2'].value
########################### TESTS #############################################
elif d.robots_definition == "Test 1 real Nao (left)":# 1 real Nao (voices + movements)
    import nao as n
    sheet_nao = d.excel_file['Nao']
    robot_IP_left = str(sheet_nao['B3'].value)
    port_left = sheet_nao['B2'].value
elif d.robots_definition == "Test 1 voices Nao (left)":# 1 real Nao with only voices
    import nao as n
    sheet_nao = d.excel_file['Nao']
    robot_IP_left = str(sheet_nao['B3'].value)
    port_left = sheet_nao['B2'].value
elif d.robots_definition == "Test 1 movements nao (left)":# 1 Nao with only movements
    import nao as n
    import keepon as k
    sheet_nao = d.excel_file['Nao']
    robot_IP_left = str(sheet_nao['B3'].value)
    port_left = sheet_nao['B2'].value
elif d.robots_definition == "Test only voices Keepon":# 2 keepon with only voices
    import keepon as k
elif d.robots_definition == "Test only right Keepon ":
    import keepon as k
    sheet_keepon = d.excel_file['Keepon']
    keepon_right = serial.Serial(sheet_keepon['C2'].value,9600)
    time.sleep(0.5)
##############################################################################

def initializeRobot():
    if d.robots_definition == "2 Keepon":
##        k.initialize(2,keepon_right)
##        k.initialize(3,keepon_left)
        a = k.initialize(3,keepon_right)
        b = k.initialize(2,keepon_left)
        a.start()
        b.start()
    elif d.robots_definition == "2 Nao":
        a = n.initialize(2,robot_IP_left,port_left)
        b = n.initialize(3,robot_IP_right,port_right)
        a.start()
        b.start()
    elif d.robots_definition == "Left Keepon & Right Nao":
        a = k.initialize(2,keepon_left)
        b = n.initialize(3,robot_IP_right,port_right)
        a.start()
        b.start()
    elif d.robots_definition == "Left Nao & Right Keepon":
        a = k.initialize(3,keepon_right)
        b = n.initialize(2,robot_IP_left,port_left)
        a.start()
        b.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 movements nao (left)":
        b = n.initialize(2,robot_IP_left,port_left)
        b.start()
    elif d.robots_definition == "Test only right Keepon ":
        a = k.initialize(3,keepon_right)
        a.start()
    elif d.robots_definition == "Test no voices no movements":
        return
        
def playVoiceWelcome():
    if d.robots_definition == "2 Keepon":
        a = threading.Thread(None, k.otherVoices, None, ("Welcome window",), {})
        a.start()
    elif d.robots_definition == "2 Nao":
        a = threading.Thread(None, n.otherVoices, None, ("Welcome window",2,robot_IP_left,port_left), {})
        b = threading.Thread(None, n.otherVoices, None, ("Welcome window",3,robot_IP_right,port_right), {})
        a.start()
        b.start()
    elif d.robots_definition == "Left Keepon & Right Nao":
        a = threading.Thread(None, k.otherVoices, None, ("Welcome window",), {})
        b = threading.Thread(None, n.otherVoices, None, ("Welcome window",3,robot_IP_right,port_right), {})
        b.start()
        a.start()
    elif d.robots_definition == "Left Nao & Right Keepon":
        a = threading.Thread(None, n.otherVoices, None, ("Welcome window",2,robot_IP_left,port_left), {})
        b = threading.Thread(None, k.otherVoices, None, ("Welcome window",), {})
        b.start()
        a.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 voices Nao (left)":
        a = threading.Thread(None, n.otherVoices, None, ("Welcome window",2,robot_IP_left,port_left), {})
        a.start()
    elif d.robots_definition == "Test only voices Keepon" or d.robots_definition == "Test 1 movements nao (left)":
        a = threading.Thread(None, k.otherVoices, None, ("Welcome window"), {})
        a.start()
    elif d.robots_definition == "Test only right Keepon ":
        a = threading.Thread(None, k.otherVoices, None, ("Welcome window"), {})
        a.start()
    elif d.robots_definition == "Test no voices no movements":
        return

def playVoiceEnd():
    if d.robots_definition == "2 Keepon":
        a = threading.Thread(None, k.otherVoices, None, ("End window",), {})
        a.start()
    elif d.robots_definition == "2 Nao":
        a = threading.Thread(None, n.otherVoices, None, ("End window",2,robot_IP_left,port_left), {})
        b = threading.Thread(None, n.otherVoices, None, ("End window",3,robot_IP_right,port_right), {})
        a.start()
        b.start()
    elif d.robots_definition == "Left Keepon & Right Nao":
        a = threading.Thread(None, k.otherVoices, None, ("End window",), {})
        b = threading.Thread(None, n.otherVoices, None, ("End window",3,robot_IP_right,port_right), {})
        a.start()
        b.start()
    elif d.robots_definition == "Left Nao & Right Keepon":
        a = threading.Thread(None, n.otherVoices, None, ("End window",2,robot_IP_left,port_left), {})
        b = threading.Thread(None, k.otherVoices, None, ("End window",), {})
        a.start()
        b.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 voices Nao (left)":
        a = threading.Thread(None, n.otherVoices, None, ("End window",2,robot_IP_left,port_left), {})
        a.start()
    elif d.robots_definition == "Test only voices Keepon" or d.robots_definition == "Test 1 movements nao (left)" or d.robots_definition == "Test only right Keepon ":
        a = threading.Thread(None, k.otherVoices, None, ("End window",), {})
        a.start()
    elif d.robots_definition == "Test no voices no movements":
        return

def playVoiceQuestion(i):
    if d.robots_definition == "2 Keepon":
        a = threading.Thread(None, k.quizVoices, None, (2,i), {})
        a.start()
    elif d.robots_definition == "2 Nao":
        a = threading.Thread(None, n.quizVoices, None, (2,robot_IP_left,port_left,i), {})
        b = threading.Thread(None, n.quizVoices, None, (3,robot_IP_right,port_right,i), {})
        a.start()
        b.start()
    elif d.robots_definition == "Left Keepon & Right Nao":
        a = threading.Thread(None, k.quizVoices, None, (2,i), {})
        a.start()
        b = threading.Thread(None, n.quizVoices, None, (3,robot_IP_right,port_right,i), {})
        b.start()
    elif d.robots_definition == "Left Nao & Right Keepon":
        a = threading.Thread(None, n.quizVoices, None, (2,robot_IP_left,port_left,i), {})
        b = threading.Thread(None, k.quizVoices, None, (2,i), {})
        a.start()
        b.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 voices Nao (left)":
        a = threading.Thread(None, n.quizVoices, None, (2,robot_IP_left,port_left,i), {})
        a.start()
    elif d.robots_definition == "Test only voices Keepon" or d.robots_definition == "Test 1 movements nao (left)" or d.robots_definition == "Test only right Keepon ":
        a = threading.Thread(None, k.quizVoices, None, (2,i), {})
        a.start()
    elif d.robots_definition == "Test no voices no movements":
        return

def getLengthAudio(i):
    if d.robots_definition == "2 Keepon":
        return k.getLength(2,i)
    elif d.robots_definition == "2 Nao":
        length1 = n.getLength(2,robot_IP_left,port_left,i)
        length2 = n.getLength(3,robot_IP_right,port_right,i)
        return max(length1,length2)
        return length1
    elif d.robots_definition == "Left Keepon & Right Nao":
        return k.getLength(2,i)
    elif d.robots_definition == "Left Nao & Right Keepon":
        return k.getLength(2,i)
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 voices Nao (left)":
        return n.getLength(2,robot_IP_left,port_left,i)
    elif d.robots_definition == "Test only voices Keepon" or d.robots_definition == "Test 1 movements nao (left)" or d.robots_definition == "Test only right Keepon ":
        return k.getLength(2,i)
    elif d.robots_definition == "Test no voices no movements":
        return 1

def playVoiceEndQuestionL(i):
    if d.robots_definition == "2 Keepon" or d.robots_definition == "Left Keepon & Right Nao":
        a = threading.Thread(None, k.quizVoices, None, (3,i), {})
        a.start()
    elif d.robots_definition == "2 Nao" or d.robots_definition == "Left Nao & Right Keepon":
        a = threading.Thread(None, n.quizVoices, None, (4,robot_IP_left,port_left,i), {})
        a.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 voices Nao (left)":
        a = threading.Thread(None, n.quizVoices, None, (4,robot_IP_left,port_left,i), {})
        a.start()
    elif d.robots_definition == "Test only voices Keepon" or d.robots_definition == "Test 1 movements nao (left)":
        a = threading.Thread(None, k.quizVoices, None, (3,i), {})
        a.start()
    elif d.robots_definition == "Test no voices no movements" or d.robots_definition == "Test only right Keepon ":
        return

def playVoiceEndQuestionR(i):
    if d.robots_definition == "2 Keepon" or d.robots_definition == "Left Nao & Right Keepon":
        a = threading.Thread(None, k.quizVoices, None, (4,i), {})
        a.start()
    elif d.robots_definition == "2 Nao" or d.robots_definition == "Left Keepon & Right Nao":
        a = threading.Thread(None, n.quizVoices, None, (5,robot_IP_right,port_right,i), {})
        a.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test only voices Keepon" or d.robots_definition == "Test 1 movements nao (left)" or d.robots_definition == "Test only right Keepon ":
        a = threading.Thread(None, k.quizVoices, None, (4,i), {})
        a.start()
    elif d.robots_definition == "Test no voices no movements":
        return

def launchRobotWelcome():
    if d.robots_definition == "2 Keepon":
        a = k.launch("Welcome window",3,keepon_right)
        b = k.launch("Welcome window",2,keepon_left)
        a.start()
        b.start()
    elif d.robots_definition == "2 Nao":
        a = n.launch("Welcome window",3,robot_IP_right,port_right)
        b = n.launch("Welcome window",2,robot_IP_left,port_left)
        a.start()
        b.start()
    elif d.robots_definition == "Left Keepon & Right Nao":
        a = n.launch("Welcome window",3,robot_IP_right,port_right)
        b = k.launch("Welcome window",2,keepon_left)
        a.start()
        b.start()
    elif d.robots_definition == "Left Nao & Right Keepon":
        a = k.launch("Welcome window",3,keepon_right)
        b = n.launch("Welcome window",2,robot_IP_left,port_left)
        a.start()
        b.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 movements nao (left)":
        b = n.launch("Welcome window",2,robot_IP_left,port_left)
        b.start()
    elif d.robots_definition == "Test only right Keepon ":
        a = k.launch("Welcome window",3,keepon_right)
        a.start()
    elif d.robots_definition == "Test no voices no movements":
        return

def launchRobotEnd():
    if d.robots_definition == "2 Keepon":
        a = k.launch("End window",3,keepon_right)
        b = k.launch("End window",2,keepon_left)
        a.start()
        b.start()
    elif d.robots_definition == "2 Nao":
        a = n.launch("End window",3,robot_IP_right,port_right)
        b = n.launch("End window",2,robot_IP_left,port_left)
        a.start()
        b.start()
    elif d.robots_definition == "Left Keepon & Right Nao":
        a = n.launch("End window",3,robot_IP_right,port_right)
        b = k.launch("End window",2,keepon_left)
        a.start()
        b.start()
    elif d.robots_definition == "Left Nao & Right Keepon":
        a = k.launch("End window",3,keepon_right)
        b = n.launch("End window",2,robot_IP_left,port_left)
        a.start()
        b.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 movements nao (left)":
        b = n.launch("End window",2,robot_IP_left,port_left)
        b.start()
    elif d.robots_definition == "Test only right Keepon ":
        a = k.launch("End window",3,keepon_right)
        a.start()
    elif d.robots_definition == "Test no voices no movements":
        return

def launchRobotQuestion(i):
    if d.robots_definition == "2 Keepon":
        a = k.launch("quiz",3,keepon_right,i)
        b = k.launch("quiz",2,keepon_left,i)
        a.start()
        b.start()
    elif d.robots_definition == "2 Nao":
        a = n.launch("quiz",3,robot_IP_right,port_right,i)
        b = n.launch("quiz",2,robot_IP_left,port_left,i)
        a.start()
        b.start()
    elif d.robots_definition == "Left Keepon & Right Nao":
        a = n.launch("quiz",3,robot_IP_right,port_right,i)
        b = k.launch("quiz",2,keepon_left,i)
        a.start()
        b.start()
    elif d.robots_definition == "Left Nao & Right Keepon":
        a = k.launch("quiz",3,keepon_right,i)
        b = n.launch("quiz",2,robot_IP_left,port_left,i)
        a.start()
        b.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 movements nao (left)":
        b = n.launch("quiz",2,robot_IP_left,port_left,i)
        b.start()
    elif d.robots_definition == "Test only right Keepon ":
        a = k.launch("quiz",3,keepon_right,i)
        a.start()
    elif d.robots_definition == "Test no voices no movements":
        return

def launchRobotQuestionEndLeft(i):
    if d.robots_definition == "2 Keepon":
        a = k.launch("quiz",4,keepon_left,i)
        a.start()
    elif d.robots_definition == "2 Nao":
        a = n.launch("quiz",4,robot_IP_left,port_left,i)
        a.start()
    elif d.robots_definition == "Left Keepon & Right Nao":
        a = k.launch("quiz",4,keepon_left,i)
        a.start()
    elif d.robots_definition == "Left Nao & Right Keepon":
        a = n.launch("quiz",4,robot_IP_left,port_left,i)
        a.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 movements nao (left)":
        b = n.launch("quiz",4,robot_IP_left,port_left,i)
        b.start()
    elif d.robots_definition == "Test no voices no movements" or d.robots_definition == "Test only right Keepon ":
        return

def launchRobotQuestionEndRight(i):
    if d.robots_definition == "2 Keepon":
        a = k.launch("quiz",5,keepon_right,i)
        a.start()
    elif d.robots_definition == "2 Nao":
        a = n.launch("quiz",5,robot_IP_right,port_right,i)
        a.start()
    elif d.robots_definition == "Left Keepon & Right Nao":
        a = n.launch("quiz",5,robot_IP_right,port_right,i)
        a.start()
    elif d.robots_definition == "Left Nao & Right Keepon":
        a = k.launch("quiz",5,keepon_right,i)
        a.start()
########################### TESTS #############################################
    elif d.robots_definition == "Test only right Keepon ":
        a = k.launch("quiz",5,keepon_right,i)
        a.start()
    elif d.robots_definition == "Test 1 real Nao (left)" or d.robots_definition == "Test 1 movements nao (left)" or d.robots_definition == "Test no voices no movements":
        return
